name: Build and Package Documentation

# This workflow is triggered on a push to the main branch
# or can be manually triggered from the GitHub UI.
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    # The job runs on the latest version of Ubuntu.
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository's code.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up the Node.js environment.
      # This is necessary for building projects that use npm, yarn, or pnpm.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
    
      - name: Install pnpm
        run: npm install -g pnpm

      # Step 3: Enable Corepack.
      # This allows projects to use the package manager and version
      # specified in their "packageManager" field in package.json.
      - name: Enable Corepack
        run: corepack enable

      # Step 4: Set up the Python environment.
      # This is needed for Python-based projects.
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Step 5: Set up the Ruby environment.
      # This step fixes the "bundle: command not found" error for Jekyll projects.
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'


      # Step 7: Build Ethereum.org Website
      # - name: Build Ethereum.org Website
      #   run: |
      #     git clone --depth=1 https://github.com/ethereum/ethereum-org-website
      #     cd ethereum-org-website
      #     # Corepack will now handle using the correct pnpm version.
      #     pnpm install
      #     pnpm run build
      #     cd ..
      #     tar czf "ethereum.tar.gz" ethereum-org-website/public

      # Step 8: Build Hardhat Documentation
      # - name: Build Hardhat Docs
      #   run: |
      #     git clone --depth=1 https://github.com/NomicFoundation/hardhat
      #     cd hardhat
      #     yarn --frozen-lockfile
      #     cd docs/
      #     yarn
      #     yarn add sharp
      #     sed -i 's|images: {|images: {\nloader: "imgix", path:"localhost:8000/",\n|g' hardhat/docs/next.config.js
      #     yarn build
      #     npx next export
      #     cd ..
      #     cd ..
      #     tar czf "hardhat.tar.gz" hardhat/docs/out

      # Step 9: Build Solidity Documentation
      # - name: Build Solidity Docs
      #   run: |
      #     git clone --depth=1 https://github.com/ethereum/solidity
      #     cd solidity
      #     cd docs
      #     pip install -r requirements.txt
      #     # Using TZ=UTC to ensure consistent build output.
      #     TZ=UTC make html
      #     cd ..
      #     cd ..
      #     tar czf "solidity.tar.gz" solidity/docs/_build/html

      # Step 10: Build Vite Documentation
      # - name: Build Vite Docs
      #   run: |
      #     git clone --depth=1 https://github.com/vitejs/vite
      #     cd vite
      #     # Corepack ensures the correct pnpm version is used.
      #     pnpm install --store=node_modules/.pnpm-store
      #     npm run ci-docs
      #     cd ..
      #     tar czf "vite.tar.gz" vite/docs/.vitepress/dist




      # Step 17: Build Vue.js Documentation
      # - name: Build Vue.js Docs
      #   run: |
      #     git clone --depth=1 https://github.com/vuejs/docs
      #     cd docs
      #     # Corepack ensures the correct pnpm version is used.
      #     pnpm install --store=node_modules/.pnpm-store
      #     npm run ci-docs
      #     cd ..
      #     tar czf "vuejs V3.tar.gz" docs/.vitepress/dist

      # Step 18: Build Keras Documentation
      # - name: Build Keras Docs
      #   run: |
      #     git clone --depth=1 https://github.com/keras-team/keras-io
      #     cd keras-io
      #     pip install -r requirements.txt
      #     cd scripts
      #     python autogen.py make
      #     cd ..
      #     cd ..
      #     tar czf "keras.tar.gz" keras-io/site

      # Step 19: Build NumPy Documentation
      # - name: Build NumPy Docs
      #   run: |
      #     git clone --depth=1 https://github.com/numpy/numpy
      #     cd numpy
      #     pip install -r requirements/all_requirements.txt
      #     cd doc/
      #     make html
      #     cd ..
      #     tar czf "numpy.tar.gz" numpy/doc/build/html

      # Step 20: Build NumPy Tutorials Documentation
      # - name: Build NumPy Tutorials Docs
      #   run: |
      #     git clone --depth=1 https://github.com/numpy/numpy-tutorials
      #     cd numpy-tutorials
      #     cd site
      #     pip install -r requirements.txt
      #     make html
      #     cd ..
      #     cd ..
      #     tar czf "numpy-tutorials.tar.gz" numpy-tutorials/site/_build

      # Step 21: Build Pandas Documentation
      # - name: Build Pandas Docs
      #   run: |
      #     git clone --depth=1 https://github.com/pandas-dev/pandas
      #     cd pandas
      #     cd ..
      #     # Note: The tar command will archive the entire current directory.
      #     tar czf "pandas.tar.gz" ./

      # Step 22: Build FastAPI Documentation
      # - name: Build FastAPI Docs
      #   run: |
      #     git clone --depth=1 https://github.com/tiangolo/fastapi
      #     cd fastapi
      #     pip install flit
      #     flit install --user --extras doc
      #     sh scripts/build-docs.sh
      #     cd ..
      #     tar czf "fastapi.tar.gz" fastapi/site

      # Step 23: Build TypeScript Documentation
      - name: Build TypeScript Docs
        run: |
          git clone --depth=1 https://github.com/microsoft/TypeScript-Website
          cd TypeScript-Website
          yarn install
          yarn bootstrap
          yarn build-site
          cd ..
          tar czf "typescript.tar.gz" TypeScript-Website/docs/build

      # Step 24: Build MDN Documentation
      - name: Build MDN Docs
        run: |
          git clone --depth=1 https://github.com/mdn/content
          cd content
          yarn install
          yarn build
          cp -r node_modules/@mdn/yari/client/build/ .
          cd ..
          tar czf "Mozilla Developer Network.tar.gz" content/build




          
      # Step 11: Build Electron Documentation
      - name: Build Electron Docs
        run: |
          git clone --depth=1 https://github.com/electron/electronjs.org-new
          cd electronjs.org-new
          yarn install
          yarn build
          cd ..
          tar czf "Electron.tar.gz" electronjs.org-new/build
      # Step 6: Build Express.js Documentation
      - name: Build Express.js Docs
        run: |
          git clone --depth=1 https://github.com/expressjs/expressjs.com
          cd expressjs.com
          sed -i "s|'110', ||g" Gemfile
          bundle install
          gem install jekyll-redirect-from
          bundle exec jekyll build
          cd ..
          tar czf "expressjs.tar.gz" expressjs.com/_site

      # Step 12: Build Bootstrap Documentation
      - name: Build Bootstrap Docs
        run: |
          git clone --depth=1 https://github.com/twbs/bootstrap
          cd bootstrap
          npm install
          npm run docs-build
          cd ..
          tar czf "bootstrap 5.tar.gz" bootstrap/_site
      # Step 14: Build TailwindCSS Documentation
      - name: Build TailwindCSS Docs
        run: |
          git clone --depth=1 https://github.com/tailwindlabs/tailwindcss.com
          cd tailwindcss.com
          pnpm install
          # Modifying the next.config.mjs file to disable image optimization.
          sed -i "s|export default {|export default {\nÂ  images: { unoptimized: true},\n|g" next.config.ts
          pnpm run build
          cd ..
          tar czf "tailwindcss.tar.gz" tailwindcss.com/.next

      # Step 15: Build Axios Documentation
      - name: Build Axios Docs
        run: |
          git clone --depth=1 https://github.com/axios/axios-docs
          cd axios-docs
          npm install -g inert-ssg
          inert build
          cd ..
          tar czf "axios.tar.gz" axios-docs/public

      # Step 16: Build React Documentation
      - name: Build React Docs
        run: |
          git clone --depth=1 https://github.com/reactjs/reactjs.org
          cd reactjs.org
          yarn install
          yarn build
          cd ..
          tar czf "reactjs.tar.gz" reactjs.org/public
